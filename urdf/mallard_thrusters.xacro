<?xml version="1.0"?>
<robot name="mallard" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Thrusters components & constants -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="tr1" value=".02" />
  <xacro:property name="tl1" value=".1" />
  <xacro:property name="tr2" value=".05" />
  <xacro:property name="tl2" value=".03" />

  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="gray">
    <color rgba="0.8 0.8 0.8 1.0"/>
  </material>

  <!--  *** MACROS *** -->
  <!-- Thruster link -->
  <xacro:macro name="thruster_link" params="name xyz rpy">
      
      <joint name="${name}" type="revolute">
          <parent link="base_link"/>
          <child link="${name}"/>
          <origin rpy="${rpy}" xyz="${xyz}"/>
          <dynamics damping="10.0"/>
          <axis xyz="0 1 0"/>
          <limit effort="30" velocity="5.0" lower="-${PI}" upper="${PI}" />
      </joint>
      
      <link name="${name}">      
          <!-- <buoyancy><compensation>1.0</compensation></buoyancy> -->
          <visual name="${name}_1">
              <geometry>
                  <cylinder length="${tl1}" radius="${tr1}"/>
              </geometry>
              <material name="black">
                  <color rgba="0 0 0 1"/>
              </material>
          </visual>  
          <visual name="${name}_2">
              <origin xyz="0 0 ${(tl1+tl2)/2}"/>
              <geometry>
                  <cylinder length="${tl2}" radius="${tr2}"/>
              </geometry>
              <material name="black">
                  <color rgba="0 0 0 1"/>
              </material>
          </visual>  
          <inertial>
              <mass  value="0.5"/>
              <inertia ixx="0.1"
                       ixy="0.0"
                       ixz="0.0"
                       iyy="0.1"
                       iyz="0.0"
                       izz="0.1"/>
          </inertial>  
      </link> 

      <gazebo reference="${name}">
          <material>Gazebo/Black</material>
      </gazebo>

      <buoyancy>
          <compensation>1.01</compensation>
          <!-- <origin xyz= "0 0 0"/>
          <limit radius="0.0"/>
          <damping xyz="60 100 100" rpy="20 50 50"/> -->
      </buoyancy>
  </xacro:macro> 

  <!-- <link name="odom">
  </link> -->

  <link name="base_link">
      <!-- Channels (aluminum connecting elements) -->
      <visual name="r_channel_visual">
        <geometry> 
          <box size="0.450 0.038 0.038"/>
        </geometry>
        <material name="gray"/>
        <origin rpy="0 0 0" xyz="0 -0.15 0"/> 
      </visual>
      <collision name="r_channel_collision">
        <geometry> 
          <box size="0.450 0.038 0.038"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 -0.15 0"/> 
      </collision>

      <visual name="l_channel_visual">
        <geometry> 
          <box size="0.450 0.038 0.038"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0.15 0"/> 
      </visual>
      <collision name="l_channel_collision">
        <geometry> 
          <box size="0.450 0.038 0.038"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0.15 0"/> 
      </collision>

      <!-- Cylinders (acrylic tubes)-->
      <visual name="front_tube_visual">
        <geometry>
          <cylinder radius="0.057" length="0.5"/>
        </geometry>
        <origin xyz="0.225 0 0.076" rpy="1.5707 0.0 0.0"/>
      </visual>
      <collision name="front_tube_collision">
        <geometry>
          <cylinder radius="0.057" length="0.5"/>
        </geometry>
        <origin xyz="0.225 0 0.076" rpy="1.5707 0.0 0.0"/>
      </collision>

      <visual name="rear_tube_visual">
        <geometry>
          <cylinder radius="0.057" length="0.5"/>
        </geometry>
        <origin xyz="-0.225 0 0.076" rpy="1.5707 0.0 0.0"/>
      </visual>
      <collision name="rear_tube_collision">
        <geometry>
          <cylinder radius="0.057" length="0.5"/>
        </geometry>
        <origin xyz="-0.225 0 0.076" rpy="1.5707 0.0 0.0"/>
      </collision>

      <!-- chassis physics -->
      <inertial>
        <mass value="10.0"/>
        <inertia ixx="0.17" ixy="0.0" ixz="0.0" iyy="0.25" iyz="0.0" izz="0.40"/>
      </inertial>

      <!-- The <limit> tag indicates where the buoyancy force 
      begins to decrease when approaching the water surface -->
      <buoyancy>
          <compensation>1.00</compensation>
          <origin xyz= "0 0 0"/>
          <limit radius="0.0"/>
          <damping xyz="60 100 100" rpy="20 50 50"/>
      </buoyancy>

  </link>

  <!-- <joint name="odom_to_base_link" type="fixed">
    <origin xyz="0.5 0.0 0.0" rpy="0.0 0.0 0.0"/>
    <parent link="odom"/>
    <child link="base_link"/>
  </joint> -->


  <!-- <link name="lidar">
    <visual name="lidar_base">
      <geometry>
        <box size="0.06 0.061 0.048"/>
      </geometry>
      <material name="blue"/>
      <origin xyz="0.0 0.0 0.0"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.06 0.061 0.048"/>
      </geometry>
      <origin xyz="0.0 0.0 0.0"/>
    </collision>

    <visual name="optical_hood">
      <geometry>
        <cylinder radius="0.025" length="0.037"/>
      </geometry>
      <material name="blue"/>
      <origin xyz="0.0 0.0 0.048"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.025" length="0.037"/>
      </geometry>
      <origin xyz="0.0 0.0 0.048"/>
    </collision>

    <inertial>
      <mass value="0.250"/>
      <inertia ixx="0.00020" ixy="0.0" ixz="0.0" iyy="0.00020" iyz="0.0" izz="0.00015"/>
    </inertial>
  </link> -->

  <!-- <joint name="lidar_to_base_link" type="fixed">
    <parent link="base_link"/>
    <child link="lidar"/>
    <origin xyz="0.225 0.0 0.152" rpy="0.0 0.0 0.0"/>
  </joint> -->

  <!-- Make four thrusters -->
  <xacro:thruster_link name="thr_x_left"  xyz="0  0.2 -0.05" rpy="0 ${-PI/2} 0"/>

  <!-- FreeFloating plugin -->
  <gazebo>
    <plugin name="freefloating_gazebo_control" filename="libfreefloating_gazebo_control.so">
          <switchService>switch</switchService>
          <updateRate>100</updateRate>
          <link>base_link</link>

                <!-- THRUST CONTROL -->
                <!--    these two thrusters are actually orientable, so the map should not be hard-coded 
                        the thruster name is the name of the corresponding link --> 
                <!-- <thruster>
                    <effort>30</effort>
                    <name>fwd_left_2</name>
                </thruster> -->

                <!-- <thruster>
                    <effort>30</effort>
                    <name>fwd_right</name>
                </thruster>

                <thruster>
                    <effort>30</effort>
                    <name>temp_thruster</name>
                </thruster>

                <thruster>
                    <effort>30</effort>
                    <name>temp_thruster2</name>
                </thruster> -->
                
                <!-- <map> describes where the force or torque is applied
                with respect to body_link frame. Needs at leats one of them otherwise plugin won't work  --> 
                <!-- <thruster>
                    <map>0 1 0 0 0 0</map>
                    <effort>30</effort>
                </thruster> -->

      </plugin>
  </gazebo>


</robot>
